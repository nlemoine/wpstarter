name: PHP Quality Assurance

on:
    push:
        paths:
            - '**workflows/php-qa.yml'
            - '**.php'
            - '**templates/**'
            - '**phpcs.xml.dist'
            - '**phpunit.xml.dist'
            - '**psalm.xml'
            - '**composer.json'
    pull_request:
        paths:
            - '**workflows/php-qa.yml'
            - '**.php'
            - '**templates/**'
            - '**phpcs.xml.dist'
            - '**phpunit.xml.dist'
            - '**psalm.xml'
            - '**composer.json'
    workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:

    coding-styles:
        runs-on: ubuntu-latest
        if: ${{ !contains(github.event.head_commit.message, 'skip cs') }}

        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.0
                    coverage: none
                    tools: cs2pr

            -   name: Setup Composer auth for GitHub
                run: composer config github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}

            -   name: Install dependencies
                uses: ramsey/composer-install@v2

            -   name: Check code styles
                run: ./vendor/bin/phpcs -q ${{ ((github.event_name == 'pull_request') && '--report-checkstyle="phpcs-report.xml" ') || '' }}--report-full --runtime-set ignore_errors_on_exit 1 --runtime-set ignore_warnings_on_exit 1

            -   name: Annotate code styles for PRs
                if: ${{ github.event_name == 'pull_request' }}
                run: cs2pr --graceful-warnings phpcs-report.xm

    unit-tests:
        runs-on: ubuntu-latest
        if: ${{ !contains(github.event.head_commit.message, 'skip tests') }}
        env:
            USE_COVERAGE: no
        strategy:
            fail-fast: false
            matrix:
                php-ver: [ '7.4', '8.0', '8.1', '8.2' ]
                composer-ver: [ '2.0', '2.1', '2.2', '2.3', '2.4', '2.5', '2.6' ]
                dependency-versions: [ 'lowest', 'highest' ]
                exclude:
                    -   php-ver: '8.1'
                        composer-ver: '2.0'
                    -   php-ver: '8.1'
                        composer-ver: '2.1'
                    -   php-ver: '8.1'
                        composer-ver: '2.2'
                    -   php-ver: '8.2'
                        composer-ver: '2.0'
                    -   php-ver: '8.2'
                        composer-ver: '2.1'
                    -   php-ver: '8.2'
                        composer-ver: '2.2'
                    -   php-ver: '8.2'
                        composer-ver: '2.3'
        steps:
            -   name: Update "USE_COVERAGE" env var based on matrix
                if: ${{ (matrix.php-ver == '8.0') && (matrix.dependency-versions == 'highest') && (matrix.composer-ver == '2.5') }}
                run: echo "USE_COVERAGE=yes" >> $GITHUB_ENV

            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-ver }}
                    # WP CLI does not support yet PHP 8.2, so we hide deprecation messages
                    ini-values: zend.assertions=1, error_reporting=${{ ((matrix.php-ver == '8.2') && 'E_ALL & ~E_DEPRECATED & ~E_STRICT') || 'E_ALL' }}, display_errors=${{ ((matrix.php-ver == '8.2') && 'Off') || 'On' }}
                    coverage: ${{ ((env.USE_COVERAGE == 'yes') && 'xdebug') || 'none' }}

            -   name: Adjust Composer dependencies
                run:  |
                    composer remove --dev --no-update "roave/security-advisories"
                    composer require --dev --no-update "composer/composer:~${{ matrix.composer-ver }}.0"

            -   name: Install dependencies
                uses: ramsey/composer-install@v2
                with:
                    dependency-versions: ${{ matrix.dependency-versions }}

            -   name: Check Psalm
                if: ${{ matrix.dependency-versions == 'highest' }}
                run: ./vendor/bin/psalm ${{ ((github.event_name == 'pull_request') && '--output-format=github ') || '' }} --no-suggestions --no-diff --no-cache --no-file-cache --php-version=${{ matrix.php-ver }}

            -   name: Run unit tests
                run: ./vendor/bin/phpunit ${{ ((env.USE_COVERAGE == 'yes') && '--coverage-html=coverage-report') || '--no-coverage' }}

            -   name: Upload coverage report
                uses: actions/upload-artifact@v3
                if: ${{ env.USE_COVERAGE == 'yes' }}
                with:
                    name: coverage-report
                    path: coverage-report/

    lint:
        runs-on: ubuntu-latest
        if: ${{ !contains(github.event.head_commit.message, 'skip lint') }}
        strategy:
            fail-fast: true
            matrix:
                php-ver: [ '7.4', '8.0', '8.1', '8.2' ]
        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-ver }}
                    ini-values: zend.assertions=1, error_reporting=E_ALL, display_errors=On
                    tools: parallel-lint

            -   name: Check syntax error in sources
                run: parallel-lint ./src/
